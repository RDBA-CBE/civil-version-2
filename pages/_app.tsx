import { useEffect } from 'react';
import { useRouter } from 'next/router';
import { AppProps } from 'next/app';
import { ReactElement, ReactNode } from 'react';
import DefaultLayout from '../components/Layouts/DefaultLayout';
import { Provider } from 'react-redux';
import store from '../store/index';
import Head from 'next/head';
import { appWithI18Next } from 'ni18n';
import { ni18nConfig } from 'ni18n.config.ts';
import 'react-perfect-scrollbar/dist/css/styles.css';
import '../styles/tailwind.css';
import { NextPage } from 'next';

export type NextPageWithLayout<P = {}, IP = P> = NextPage<P, IP> & {
    getLayout?: (page: ReactElement) => ReactNode;
};

type AppPropsWithLayout = AppProps & {
    Component: NextPageWithLayout;
};

const App = ({ Component, pageProps }: AppPropsWithLayout) => {
    const router = useRouter();

    const getLayout = Component.getLayout ?? ((page) => <DefaultLayout>{page}</DefaultLayout>);

    const pwh = ['/invoice/preview', '/invoice/print1', '/invoice/print', '/invoice/viewtestreport', '/invoice/viewinvoicereport'];

    const pagesWithoutLayout = ['preview', 'print', 'print1', 'r', 'u', 'n', 'c'];

    if (router.pathname == '/people/employee') {
        const pagesWithoutLayout = ['preview', 'print', 'print1', 'r', 'u'];
    } else {
        const pagesWithoutLayout = ['preview', 'print', 'print1', 'r', 'u', 'n'];
    }

    if (router.pathname == '/invoice/edit') {
        const pagesWithoutLayout = ['preview', 'print', 'print1', 'r', 'u', 'c'];
    } else {
        const pagesWithoutLayout = ['preview', 'print', 'print1', 'r', 'u', 'n'];
    }

    if (router.pathname == '/invoice/preview') {
        const pagesWithoutLayout = ['preview', 'print', 'print1', 'r', 'u', 'c', 'n'];
    } else {
        const pagesWithoutLayout = ['preview', 'print', 'print1', 'r', 'u', 'n'];
    }

    const currentPageName = (Component.displayName || Component.name)?.toLowerCase();

    useEffect(() => {
        // Print the current route for debugging
        console.log('Current route:', router.pathname);
    }, [router.pathname]);

    const shouldUseLayout = !pwh.includes(router.pathname);
    const hideHeaderFooter = pwh.includes(router.pathname);

    console.log('shouldUseLayout:', shouldUseLayout);
    console.log('currentPageName.toLowerCase()', currentPageName.toLowerCase());
    return (
        <Provider store={store}>
            <Head>
                <link rel="icon" href="/assets/images/favicon.png" />
                <title>Covai Civil Lab Private Limited</title>
                <meta charSet="UTF-8" />
                <meta httpEquiv="X-UA-Compatible" content="IE=edge" />
                <meta name="viewport" content="width=device-width, initial-scale=1.0" />
                <meta name="description" content="Generated by create next app" />
            </Head>

            {shouldUseLayout ? getLayout(<Component {...pageProps} hideHeader={hideHeaderFooter} hideFooter={hideHeaderFooter} />) : <Component {...pageProps} />}
        </Provider>
    );
};

export default appWithI18Next(App, ni18nConfig);
